using System;
using System.Runtime.CompilerServices;
using BepInEx;
using BepInEx.Configuration;
using BepInEx.Logging;
using BepInEx.Unity.Mono;
using HarmonyLib;
using MBMModsServices;
using MBMScripts;

namespace RestlessGirls
{
	// Token: 0x02000006 RID: 6
	[NullableContext(1)]
	[Nullable(0)]
	[BepInPlugin("com.SoapBoxHero.RestlessGirls", "RestlessGirls", "2.0.0")]
	[BepInDependency("com.Memacile.SoapBoxHero.MBMModsServices", BepInDependency.DependencyFlags.HardDependency)]
	public class RestlessGirlsPlugin : BaseUnityPlugin
	{
		// Token: 0x06000006 RID: 6 RVA: 0x000020A0 File Offset: 0x000002A0
		public RestlessGirlsPlugin()
		{
			RestlessGirlsPlugin.log = base.Logger;
			RestlessGirlsPlugin.Enabled = base.Config.Bind<bool>(new ConfigDefinition("General", "Enabled"), true, new ConfigDescription("Enables RestlessGirls plugin.", null, Array.Empty<object>()));
			RestlessGirlsPlugin.Enabled.SettingChanged += this.Enabled_Changed;
			RestlessGirlsPlugin.RestTime = base.Config.Bind(new ConfigInfo<float>
			{
				Section = "General",
				Name = "RestTime",
				Description = "The time that a girl will rest before starting a new activity.",
				AcceptableValues = new AcceptableValueRange<float>(1f, 64f),
				DefaultValue = 5f
			});
			if (GameManager.ConfigData == null)
			{
				return;
			}
			if (RestlessGirlsPlugin._backup == 0f)
			{
				RestlessGirlsPlugin._backup = GameManager.ConfigData.RestTime;
				this.Inform("Original rest time is " + RestlessGirlsPlugin._backup.ToString() + "sec.");
			}
		}

		// Token: 0x06000007 RID: 7 RVA: 0x000021A5 File Offset: 0x000003A5
		private void Message(string msg)
		{
			base.Logger.LogMessage(msg);
		}

		// Token: 0x06000008 RID: 8 RVA: 0x000021B3 File Offset: 0x000003B3
		private void Inform(string msg)
		{
			base.Logger.LogInfo(msg);
		}

		// Token: 0x06000009 RID: 9 RVA: 0x000021C1 File Offset: 0x000003C1
		private void Enabled_Changed([Nullable(2)] object sender, EventArgs e)
		{
			this.Message("RestlessGirls is " + (RestlessGirlsPlugin.Enabled.Value ? "enabled" : "disabled") + ".");
		}

		// Token: 0x0600000A RID: 10 RVA: 0x000021F0 File Offset: 0x000003F0
		private void Awake()
		{
			this.Inform("Starting RestlessGirls...");
			new Harmony("com.SoapBoxHero.RestlessGirls").PatchAll(typeof(RestlessGirlsPlugin));
			this.Inform("RestlessGirls Harmony patches successful.");
		}

		// Token: 0x0600000B RID: 11 RVA: 0x00002224 File Offset: 0x00000424
		[HarmonyPatch(typeof(ConfigData), "RestTime", MethodType.Getter)]
		[HarmonyPrefix]
		public static bool ConfigData_get_RestTime(ref float __result, ConfigData __instance)
		{
			ConfigEntry<float> restTime = RestlessGirlsPlugin.RestTime;
			__result = ((restTime != null && restTime.Value > 0f && RestlessGirlsPlugin.Enabled != null && RestlessGirlsPlugin.Enabled.Value) ? RestlessGirlsPlugin.RestTime.Value : RestlessGirlsPlugin._backup);
			return false;
		}

		// Token: 0x04000004 RID: 4
		public const string AUTHOR = "SoapBoxHero";

		// Token: 0x04000005 RID: 5
		public const string GUID = "com.SoapBoxHero.RestlessGirls";

		// Token: 0x04000006 RID: 6
		[Nullable(2)]
		public static ManualLogSource log;

		// Token: 0x04000007 RID: 7
		[Nullable(2)]
		public static ConfigEntry<float> RestTime;

		// Token: 0x04000008 RID: 8
		[Nullable(2)]
		public static ConfigEntry<bool> Enabled;

		// Token: 0x04000009 RID: 9
		private static float _backup;
	}
}
