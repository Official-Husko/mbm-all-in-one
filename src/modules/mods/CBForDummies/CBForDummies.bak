using System;
using System.Runtime.CompilerServices;
using BepInEx;
using BepInEx.Configuration;
using BepInEx.Core.Logging.Interpolation;
using BepInEx.Logging;
using BepInEx.Unity.Mono;
using CBforDummies.Configuration;
using HarmonyLib;

namespace CBforDummies
{
	// Token: 0x02000006 RID: 6
	[NullableContext(1)]
	[Nullable(0)]
	[BepInPlugin("com.Memacile.CBforDummies", "CBforDummies", "1.1.0")]
	[BepInDependency("mbm.complexbreeding", BepInDependency.DependencyFlags.HardDependency)]
	public class CBforDummiesPlugin : BaseUnityPlugin
	{
		// Token: 0x17000001 RID: 1
		// (get) Token: 0x06000006 RID: 6 RVA: 0x0000209D File Offset: 0x0000029D
		// (set) Token: 0x06000007 RID: 7 RVA: 0x000020A4 File Offset: 0x000002A4
		public static GeneralConfigValues GeneralConfig { get; private set; } = new GeneralConfigValues();

		// Token: 0x17000002 RID: 2
		// (get) Token: 0x06000008 RID: 8 RVA: 0x000020AC File Offset: 0x000002AC
		// (set) Token: 0x06000009 RID: 9 RVA: 0x000020B3 File Offset: 0x000002B3
		public static MarketConfigValues MarketConfig { get; private set; } = new MarketConfigValues();

		// Token: 0x17000003 RID: 3
		// (get) Token: 0x0600000A RID: 10 RVA: 0x000020BB File Offset: 0x000002BB
		// (set) Token: 0x0600000B RID: 11 RVA: 0x000020C2 File Offset: 0x000002C2
		public static EssenceConfigValues EssenceConfig { get; private set; } = new EssenceConfigValues();

		// Token: 0x17000004 RID: 4
		// (get) Token: 0x0600000C RID: 12 RVA: 0x000020CA File Offset: 0x000002CA
		// (set) Token: 0x0600000D RID: 13 RVA: 0x000020D1 File Offset: 0x000002D1
		[Nullable(2)]
		public static ManualLogSource Log
		{
			[NullableContext(2)]
			get;
			[NullableContext(2)]
			set;
		}

		// Token: 0x0600000E RID: 14 RVA: 0x000020D9 File Offset: 0x000002D9
		public CBforDummiesPlugin()
		{
			CBforDummiesPlugin.Enabled = base.Config.Bind<bool>(new ConfigDefinition("General", "Enabled"), false, new ConfigDescription("Enables CBforDummies plugin (after game restart).\n\nIMPORTANT: This is a modification patch, so it needs ComplexBreeding enabled first or it may cause issues in the game.", null, Array.Empty<object>()));
		}

		// Token: 0x0600000F RID: 15 RVA: 0x00002114 File Offset: 0x00000314
		private void Awake()
		{
			bool flag;
			BepInExInfoLogInterpolatedStringHandler bepInExInfoLogInterpolatedStringHandler;
			if (CBforDummiesPlugin.Enabled.Value)
			{
				Configurator configurator = new Configurator(base.Config);
				ManualLogSource logger = base.Logger;
				bepInExInfoLogInterpolatedStringHandler = new BepInExInfoLogInterpolatedStringHandler(30, 1, out flag);
				if (flag)
				{
					bepInExInfoLogInterpolatedStringHandler.AppendLiteral("Installing ");
					bepInExInfoLogInterpolatedStringHandler.AppendFormatted<string>("CBforDummies");
					bepInExInfoLogInterpolatedStringHandler.AppendLiteral(" Harmony patches...");
				}
				logger.LogInfo(bepInExInfoLogInterpolatedStringHandler);
				Harmony harmony = new Harmony("com.Memacile.CBforDummies");
				CBforDummiesPlugin.GeneralConfig = configurator.GetGeneralConfigValues();
				CBforDummiesPlugin.MarketConfig = configurator.GetMarketConfigValues();
				CBforDummiesPlugin.EssenceConfig = configurator.GetEssenceConfigValues();
				harmony.PatchAll();
				ManualLogSource logger2 = base.Logger;
				bepInExInfoLogInterpolatedStringHandler = new BepInExInfoLogInterpolatedStringHandler(28, 1, out flag);
				if (flag)
				{
					bepInExInfoLogInterpolatedStringHandler.AppendFormatted<string>("CBforDummies");
					bepInExInfoLogInterpolatedStringHandler.AppendLiteral(" Harmony patches successful.");
				}
				logger2.LogInfo(bepInExInfoLogInterpolatedStringHandler);
				CBforDummiesPlugin.Log = base.Logger;
				return;
			}
			ManualLogSource logger3 = base.Logger;
			bepInExInfoLogInterpolatedStringHandler = new BepInExInfoLogInterpolatedStringHandler(13, 1, out flag);
			if (flag)
			{
				bepInExInfoLogInterpolatedStringHandler.AppendFormatted<string>("CBforDummies");
				bepInExInfoLogInterpolatedStringHandler.AppendLiteral(" is disabled.");
			}
			logger3.LogInfo(bepInExInfoLogInterpolatedStringHandler);
		}

		// Token: 0x04000004 RID: 4
		public const string AUTHOR = "Memacile";

		// Token: 0x04000005 RID: 5
		public const string GUID = "com.Memacile.CBforDummies";

		// Token: 0x04000006 RID: 6
		[Nullable(2)]
		private static ConfigEntry<bool> Enabled;
	}
}
